{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/container/container.component.css","webpack:///./src/app/container/container.component.html","webpack:///./src/app/container/container.component.ts","webpack:///./src/app/index.html","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/server/server.component.html","webpack:///./src/app/server/server.component.ts","webpack:///./src/app/servers/servers.component.css","webpack:///./src/app/servers/servers.component.html","webpack:///./src/app/servers/servers.component.ts","webpack:///./src/app/shared/mahasiswa.ts","webpack:///./src/app/tugas/tugas.component.css","webpack:///./src/app/tugas/tugas.component.html","webpack:///./src/app/tugas/tugas.component.ts","webpack:///./src/app/tugas3/tugas3.component.css","webpack:///./src/app/tugas3/tugas3.component.html","webpack:///./src/app/tugas3/tugas3.component.ts","webpack:///./src/app/week5/week5.component.css","webpack:///./src/app/week5/week5.component.html","webpack:///./src/app/week5/week5.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './index.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Magic Happen';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ServerComponent } from '../app/server/server.component';\nimport { ServersComponent } from '../app/servers/servers.component';\nimport { TugasComponent } from './tugas/tugas.component';\nimport { Tugas3Component } from './tugas3/tugas3.component';\nimport { Week5Component } from './week5/week5.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ContainerComponent } from './container/container.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServerComponent,\n    ServersComponent,\n    TugasComponent,\n    Tugas3Component,\n    Week5Component,\n    NavbarComponent,\n    ContainerComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"form-group\\\">\\n          <h2 class=\\\"mt-3\\\">Form Data Mahasiswa</h2>\\n          <hr>\\n          <label for=\\\"nim\\\" class=\\\"\\\">NIM</label> \\n          <input type=\\\"text\\\" name=\\\"nim\\\" id=\\\"nim\\\" class=\\\"form-control\\\" pattern=\\\"\\\\d{1,7}\\\" title=\\\"Masukkan 7 digit nim anda\\\" [(ngModel)]=\\\"nim\\\">\\n          <br>\\n          <label for=\\\"nama\\\" class=\\\"\\\">Nama</label> \\n          <input type=\\\"text\\\" name=\\\"nama\\\" id=\\\"nama\\\" class=\\\"form-control\\\" pattern=\\\"\\\\s\\\" [(ngModel)]=\\\"nama\\\">\\n          <br>\\n          <label for=\\\"kelas\\\" class=\\\"\\\">kelas</label> \\n          <input type=\\\"text\\\" name=\\\"kelas\\\" id=\\\"kelas\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"kelas\\\">\\n          <br>\\n          <button class=\\\"btn btn-block btn-primary \\\" (click)=\\\"tambahmhs()\\\">Tambah Mahasiswa</button>\\n          <br>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <h2 class=\\\"mt-3\\\">Data Mahasiswa</h2>\\n        <hr>\\n        <div class=\\\"card mb-3\\\" *ngFor=\\\"let mhs of daftarmhs\\\">\\n            <h3 class=\\\"card-header\\\">{{mhs.nama}}</h3>\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">{{mhs.nim}}</h5>\\n              <p class=\\\"card-text\\\">{{mhs.kelas}}</p>\\n             \\n            </div>\\n        </div>\\n      \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Mahasiswa } from '../shared/mahasiswa';\n\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n  nim = ''\n  nama = ''\n  kelas = ''\n  daftarmhs : Mahasiswa[] =  []\n  mhs\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  tambahmhs(){\n    this.mhs = new Mahasiswa(this.nim,this.nama,this.kelas)\n    this.daftarmhs.push(this.mhs)\n    this.nim = ''\n    this.nama = ''\n    this.kelas = ''\n    \n  }\n\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<app-container></app-container>\\n\"","module.exports = \".logo{background-color: white}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" [ngStyle]=\\\"{'color': 'white'}\\\">Navbar</a>\\n  <button aria-controls=\\\"collapsibleNavId\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\" class=\\\"navbar-toggler hidden-lg-up\\\" data-target=\\\"#collapsibleNavId\\\" data-toggle=\\\"collapse\\\" type=\\\"button\\\">\\n    <span _ngcontent-c1=\\\"\\\" class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavId\\\">\\n      <ul  class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n        <li  class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Master Data</a>\\n        </li>\\n      </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Mahasiswa } from '../shared/mahasiswa';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  \n\n}\n","module.exports = \"<!-- <p \\n    [ngStyle]=\\\"{backgroundColor: getColor()}\\\"\\n    [ngClass]=\\\"{online: serverStatus === 'online' }\\\">\\n    Server with ID {{ servername }} is {{ serverStatus }}</p> -->\\n\"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-server',\n    // selector: '[app-server]', // property selector\n    // selector: '.app-server', // class selector\n    templateUrl: './server.component.html',\n    // styleUrls: ['./server.component.css']\n    styles:[`\n        .online {\n            color:  white;\n        }\n    `]\n})\n\nexport class ServerComponent {\n    serverID = 10;\n    serverStatus = 'online';\n\n    constructor(){\n        this.serverStatus = Math.random() > 0.5 ? 'online' : 'offline';\n    }\n\n    getServerStatus() {\n        return this.serverStatus;\n    }\n\n    getColor() {\n        return this.serverStatus === 'online' ? 'green' : 'red';\n    }\n}","module.exports = \"\"","module.exports = \"<label>Server Name</label>\\n<!-- <input \\n  type=\\\"text\\\"\\n  class=\\\"form-control\\\"\\n  (input)=\\\"onUpdateServerName($event)\\\"> -->\\n<input \\n  type=\\\"text\\\"\\n  class=\\\"form-control\\\"\\n  [(ngModel)]=\\\"serverName\\\">\\n<p>{{ serverName }}</p>\\n<button \\n  class=\\\"btn btn-primary\\\" \\n  [disabled]=\\\"!allowNewServer\\\"\\n  (click)=\\\"onCreationStatus()\\\">Add Server</button>\\n<!-- <p>{{ serverCreationStatus }}</p> -->\\n<!-- <p *ngIf=\\\"serverCreated; else noServer\\\">Server telah dibuat, nama server adalah {{ serverName }}</p>\\n<ng-template #noServer>\\n  <p>No server was created</p>\\n</ng-template> -->\\n<p *ngIf=\\\"serverCreated\\\">Server telah dibuat, nama server adalah {{ serverName }}</p>\\n<!-- <app-server></app-server> -->\\n<app-server *ngFor=\\\"let server of servers\\\"></app-server>\"","import { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements OnInit {\n  allowNewServer = false;\n  serverCreationStatus = 'Tidak ada server baru yang telah dibuat!';\n  serverName = 'TestServer';\n  serverCreated = false;\n  servers = ['TestServer', 'TestServer 2'];\n\n  constructor() {  setTimeout(()=> {\n    this.allowNewServer = true;\n  }, 2000)\n}\n    \n  ngOnInit() {\n  }\n\n  onCreationStatus() {\n    this.serverCreated = true;\n\n    this.servers.push(this.serverName);\n    this.serverCreationStatus = 'Server telah dibuat!';\n  }\n\n  onUpdateServerName(event: Event) {\n    this.serverName = (<HTMLInputElement>event.target).value;\n  }\n\n}\n","export class Mahasiswa {\n    constructor(public nim:string,public nama:string,public kelas:string){}\n}\n","module.exports = \"\"","module.exports = \"<label>Server Name</label>\\n<!-- <input \\n  type=\\\"text\\\"\\n  class=\\\"form-control\\\"\\n  (input)=\\\"onUpdateServerName($event)\\\"> -->\\n<input \\n  type=\\\"text\\\"\\n  class=\\\"form-control\\\"\\n  [(ngModel)]=\\\"username\\\"\\n  (ngModelChange)=\\\"checking()\\\"\\n  >\\n<br>\\n<button \\n  class=\\\"btn btn-primary mb-3\\\" \\n  [disabled]=\\\"username===''\\\"\\n  (click)=\\\"onCreationStatus()\\\">Add Username</button>\\n\\n\\n  \\n<p>username : {{ getUsername() }}</p>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tugas',\n  templateUrl: './tugas.component.html',\n  styleUrls: ['./tugas.component.css']\n})\nexport class TugasComponent implements OnInit {\n  allowNewServer = true;\n  serverCreationStatus = 'Tidak ada server baru yang telah dibuat!';\n  username = '';\n  usernameprint = '';\n\n\n  constructor() {\n    setTimeout(()=> {\n      this.allowNewServer = true;\n    }, 2000)\n   }\n\n  ngOnInit() {\n  }\n\n  onCreationStatus() {\n    if (this.username != ''){\n        this.allowNewServer = false;\n        this.usernameprint = this.username\n        this.username = '' \n        \n    }\n  }\n\n  getUsername(){\n    return this.usernameprint;\n  }\n\n  onUpdateServerName(event: Event) {\n    if(this.username != ' '){\n      this.username = (<HTMLInputElement>event.target).value;\n    }\n    \n  }\n\n  checking(){\n    if (this.username!= '') {\n      this.allowNewServer = true;\n    }else{\n      this.allowNewServer = false;\n    }\n  }\n\n  \n\n}\n","module.exports = \"\\n.online {\\n    color:  white;\\n}\\n\"","module.exports = \"<button \\n  class=\\\"btn btn-primary\\\" \\n  (click)=\\\"CreateText()\\\">Tampilkan Detail</button>\\n  <p  *ngIf=\\\"genap\\\">\\n  <!-- [ngStyle]=\\\"{'background-color' : i+2 > 5 ? 'blue' : 'white'}\\\"\\n  [ngClass]=\\\"{online: i+2 > 5 }\\\" -->\\n  {{textprint}} </p>\\n\\n  <ng-container *ngFor=\\\"let text of texts; let i=index\\\" >\\n      <p \\n  [ngStyle]=\\\"{'background-color' : i+2 > 5 ? 'blue' : 'white'}\\\"\\n  [ngClass]=\\\"{online: i+2 > 5 }\\\">\\n  {{text[1]}} </p>\\n  \\n  \\n  </ng-container>\\n\\n \"","import { Component, OnInit } from '@angular/core';\nimport { text } from '@angular/core/src/render3/instructions';\n\n@Component({\n  selector: 'app-tugas3',\n  templateUrl: './tugas3.component.html',\n  styleUrls: ['./tugas3.component.css']\n})\nexport class Tugas3Component implements OnInit {\n  textprint = \"POLITEKNIK NEGERI MALANG\"\n\n  texts = [];\n  counter : number = 0;\n  genap = false\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  CreateText(){\n    var perclick = new Array();\n    perclick[0] = this.textprint;\n    this.counter++;\n    perclick[1] = this.counter;\n    this.texts.push(perclick);\n    if(this.texts.length % 2==0){\n      this.genap = true\n    }else{\n      this.genap = false\n    }\n    console.log(this.counter)\n    console.log(this.textprint)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label for=\\\"nim\\\" class=\\\"\\\">NIM</label> \\n        <input type=\\\"text\\\" name=\\\"nim\\\" id=\\\"nim\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"nim\\\">\\n        <br>\\n        <label for=\\\"nama\\\" class=\\\"\\\">Nama</label> \\n        <input type=\\\"text\\\" name=\\\"nama\\\" id=\\\"nama\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"nama\\\">\\n        <br>\\n        <label for=\\\"alamat\\\" class=\\\"\\\">Alamat</label>\\n        <textarea name=\\\"alamat\\\" id=\\\"alamat\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"10\\\" [(ngModel)]=\\\"alamat\\\"></textarea>\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"tambahmhs()\\\">Tambah Mahasiswa</button>\\n      </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\" *ngFor=\\\"let mhs of daftarmhs\\\">\\n        <hr>  \\n          <h3>{{mhs.nama}}</h3>\\n          <h4>{{mhs.nim}}</h4>\\n          <p>{{mhs.alamat}}</p>\\n        <hr>    \\n      </div>\\n  </div>\\n \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Mahasiswa } from '../shared/mahasiswa'\n\n@Component({\n  selector: 'app-week5',\n  templateUrl: './week5.component.html',\n  styleUrls: ['./week5.component.css']\n})\nexport class Week5Component implements OnInit {\n  nim = '';\n  nama = '';\n  alamat = ''\n  daftarmhs : Mahasiswa[] =  []\n  mhs\n \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  tambahmhs(){\n    this.mhs = new Mahasiswa(this.nim,this.nama,this.alamat)\n    this.daftarmhs.push(this.mhs)\n    this.nim = ''\n    this.nama = ''\n    this.alamat = ''\n    \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}